name: Deploy Homologação

on:
  push:
    branches:
      - homolog
    paths:
      - "bitbook-api/**"
      - "bittopics-api/**"
      - "bittrainers-api/**"
  pull_request:
    types: [closed]
    branches:
      - homolog
    paths:
      - "bitbook-api/**"
      - "bittopics-api/**"
      - "bittrainers-api/**"

jobs:
  deploy:
    if: |
      github.event_name == 'push' || 
      (github.event_name == 'pull_request' && 
       github.event.action == 'closed' && 
       github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Detect changed APIs
        id: detect-apis
        run: |
          CHANGED_APIS=()

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Para PRs, verifica se foi MERGED (não apenas fechada)
            if [[ "${{ github.event.pull_request.merged }}" != "true" ]]; then
              echo "PR was closed but not merged, skipping deployment"
              echo "changed_apis=" >> $GITHUB_OUTPUT
              exit 0
            fi
            
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            echo "PR was merged, comparing changes between $BASE_SHA and $HEAD_SHA"
          else
            # Para push direto na homolog
            BASE_SHA="HEAD^"
            HEAD_SHA="HEAD"
            echo "Direct push to homolog, comparing changes between $BASE_SHA and $HEAD_SHA"
          fi

          # Verifica se há mudanças nas APIs
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep -q "^bitbook-api/"; then
            CHANGED_APIS+=("bitbook-api")
            echo "✅ bitbook-api has changes"
          fi
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep -q "^bittopics-api/"; then
            CHANGED_APIS+=("bittopics-api")
            echo "✅ bittopics-api has changes"
          fi
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep -q "^bittrainers-api/"; then
            CHANGED_APIS+=("bittrainers-api")
            echo "✅ bittrainers-api has changes"
          fi

          if [ ${#CHANGED_APIS[@]} -eq 0 ]; then
            echo "❌ No APIs changed in this commit/merge"
            echo "changed_apis=" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "🚀 Changed APIs: ${CHANGED_APIS[*]}"
          echo "changed_apis=${CHANGED_APIS[*]}" >> $GITHUB_OUTPUT

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh

          # Grava a chave privada no formato correto
          echo "${{ secrets.HOMOLOG_EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Adiciona fingerprint do host para evitar prompt interativo
          ssh-keyscan -H ${{ secrets.HOMOLOG_EC2_HOST }} >> ~/.ssh/known_hosts

          # Debug: Valida se a chave tem formato válido
          echo "🔍 Verificando formato da chave..."
          ssh-keygen -y -f ~/.ssh/deploy_key >/dev/null 2>&1 || (echo "❌ Formato da chave inválido"; exit 1)

          # Debug: Mostra as duas primeiras linhas da chave (sem vazar tudo)
          echo "🧾 Primeiras linhas da chave:"
          head -n 2 ~/.ssh/deploy_key

          # Testa conexão com o host (substitua ec2-user se necessário)
          echo "🔌 Testando conexão SSH com o EC2..."
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ec2-user@${{ secrets.HOMOLOG_EC2_HOST }} 'echo ✅ Conexão SSH OK'


      - name: Deploy changed APIs
        if: steps.detect-apis.outputs.changed_apis != ''
        run: |
          IFS=' ' read -ra APIS <<< "${{ steps.detect-apis.outputs.changed_apis }}"
          for api in "${APIS[@]}"; do
            echo "Deploying $api..."

            if [ ! -d "$api" ]; then
              echo "Error: API directory $api not found"
              exit 1
            fi

            if [[ "$api" == "bitbook-api" ]]; then
              DB_NAME=${{ secrets.HOMOLOG_BANCO_BITBOOK }}
            elif [[ "$api" == "bittopics-api" ]]; then
              DB_NAME=${{ secrets.HOMOLOG_BANCO_BITTOPICS }}
            elif [[ "$api" == "bittrainers-api" ]]; then
              DB_NAME=${{ secrets.HOMOLOG_BANCO_BITTRAINERS }}
            else
              echo "Error: Invalid API detected"
              exit 1
            fi

            backup_file="backup_${api}_homolog_$(date +%Y%m%d_%H%M%S).sql"

            echo "Backup DB..."
            ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.HOMOLOG_EC2_USER }}@${{ secrets.HOMOLOG_EC2_HOST }} \
              "mkdir -p /home/ec2-user/bitplus-backend/backups && \
              mysqldump -h ${{ secrets.HOMOLOG_DB_HOST }} -u ${{ secrets.HOMOLOG_DB_USER }} -p${{ secrets.HOMOLOG_DB_PASSWORD }} $DB_NAME > /home/ec2-user/bitplus-backend/backups/$backup_file"

            echo "Pull latest code..."
            ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.HOMOLOG_EC2_USER }}@${{ secrets.HOMOLOG_EC2_HOST }} \
              "cd /home/ec2-user/bitplus-backend && git pull origin homolog"

            echo "Docker Compose up..."
            ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.HOMOLOG_EC2_USER }}@${{ secrets.HOMOLOG_EC2_HOST }} \
              "cd /home/ec2-user/bitplus-backend/infra && docker-compose up -d --build $api"

            echo "Running migrations..."
            echo "🔍 Verificando migrations pendentes para $api..."
            echo "📍 Comando que será executado: docker-compose exec -e NODE_ENV=development $api npm run migration:show"
            if ! ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.HOMOLOG_EC2_USER }}@${{ secrets.HOMOLOG_EC2_HOST }} \
              "cd /home/ec2-user/bitplus-backend/infra && \
              echo '📋 Status dos containers:' && \
              docker-compose ps && \
              echo '📋 Listando migrations pendentes:' && \
              echo '🔧 Executando: docker-compose exec -e NODE_ENV=development $api npm run migration:show' && \
              docker-compose exec -e NODE_ENV=development $api npm run migration:show && \
              echo '🚀 Executando migrations:' && \
              echo '🔧 Executando: docker-compose exec -e NODE_ENV=development $api npm run migration:run' && \
              docker-compose exec -e NODE_ENV=development $api npm run migration:run && \
              echo '✅ Migrations executadas com sucesso!'"; then

              echo "❌ Migration failed, iniciando rollback..."
              echo "🔍 Último comando executado: docker-compose exec -e NODE_ENV=development $api npm run migration:run"

              echo "🔄 Restaurando backup do banco..."
              ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.HOMOLOG_EC2_USER }}@${{ secrets.HOMOLOG_EC2_HOST }} \
                "mysql -h ${{ secrets.HOMOLOG_DB_HOST }} -u ${{ secrets.HOMOLOG_DB_USER }} -p${{ secrets.HOMOLOG_DB_PASSWORD }} $DB_NAME < /home/ec2-user/bitplus-backend/backups/$backup_file"

              echo "🔄 Revertendo código para commit anterior..."
              ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.HOMOLOG_EC2_USER }}@${{ secrets.HOMOLOG_EC2_HOST }} \
                "cd /home/ec2-user/bitplus-backend && \
                git reset --hard HEAD^ && \
                cd /home/ec2-user/bitplus-backend/infra && \
                docker-compose up -d --build $api"

              echo "✅ Rollback completed"
              exit 1
            fi
          done

      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment failed for one or more APIs"
          exit 1
